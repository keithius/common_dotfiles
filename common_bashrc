
# ex - archive extractor
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}


# prompt
# The escape sequence \e[0;31m for instance, gets sucked up by the terminal, 
# which in turn turns the following text red, but bash doesn't know that. So,
# you have to tell bash that that sequence of characters should not
# be counted in the prompt's length, and you do that by enclosing it in \[ \].
# I also recommend using tput instead of hardcoding terminal escape sequences.
PS1='\[\e[0;33m\]\u@\h\[\e[m\] \[\e[0;34m\]\w \$\[\e[m\] '

# create ranger-cd and bind it to C-o if ranger is installed
if hash ranger 2>/dev/null; then
	function ranger-cd {
		tempfile='/tmp/chosendir'
		ranger --choosedir="$tempfile" "${@:-$(pwd)}"
		test -f "$tempfile" &&
		if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
			cd -- "$(cat "$tempfile")"
		fi
		 rm -f -- "$tempfile"
	}

	# This binds Ctrl-O to ranger-cd:
	bind '"\C-o":"ranger-cd\C-m"'
else
	echo "Can not find ranger"
fi


# Start tmux if it is not only running. Start only one instance. Reattach if possible. Hopefulle this works
if hash tmux 2>/dev/null; then
	if [[ $- == *i* ]]
	then
			if which tmux 2>&1 >/dev/null; then
				#if not inside a tmux session, and if no session is started, start a new session
				test -z "$TMUX" && (tmux attach || tmux new-session)
			fi
	fi
else
	echo "Can not find tmux"
fi
	
# Some aliases for some common things
alias ls='ls --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias ll='ls -l --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias la='ls -la --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias grep='grep --color=tty -d skip'
alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano PKGBUILD'
